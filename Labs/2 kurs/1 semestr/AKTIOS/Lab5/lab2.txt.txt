/*#!/bin/bash
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/stat.h>
#include <dirent.h>

long long int allocated_space = 0;
long long int real_size = 0;

void calculate_space(const char *path) {
    struct stat st;
    if (stat(path, &st) == 0) {
        if (S_ISREG(st.st_mode)) {
            allocated_space += st.st_blocks * 512; 
// выделенное дисковое пространство для файла
            real_size += st.st_size; // реальный размер файла
        } else if (S_ISDIR(st.st_mode)) {
            DIR *dir = opendir(path);
            if (dir == NULL) {
                return;
            }
            struct dirent *entry;
            while ((entry = readdir(dir)) != NULL) {
                if (strcmp(entry->d_name, ".") != 0 && strcmp(entry->d_name, "..") != 0) {
                    char new_path[1024];
                    snprintf(new_path, sizeof(new_path), "%s/%s", path, entry->d_name);
                    calculate_space(new_path);
                }
            }
            closedir(dir);
        }
    }
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        printf("Usage: %s <directory>\n", argv[0]);
        return 1;
    }
    
    calculate_space(argv[1]);

    double usage_percent = ((double)real_size/allocated_space) * 100;

    printf("Allocated space: %lld bytes\n", allocated_space);
    printf("Real size: %lld bytes\n", real_size);
    printf("Disk space usage: %.2f%%\n", usage_percent);

    return 0;
} 